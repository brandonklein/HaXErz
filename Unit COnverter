public class UnitConverter{

	final String[] FLUIDS = {"gallons","quarts","pints","cups","tablespoons","teaspoons"};
	final int[] FLUID_RATIOS = {4,2,2,16,3};
	final String[] SOLIDS = {"pound","ounces"};
	final int[] SOLIDS_RATIOS = {16};
	//convert string of quantity to string of return
	public int convertTo(String string1, int quantity, String string2){
		string1 = toStandardNotation(string1);
		string2 = toStandardNotation(string2);
		int conversion = 1;
		if(string1.equals("dozen") && string2.equals("items")){
			return quantity * 12;
		}
		else if (string1.equals("dozen") && string2.equals("items")){
			if(quantity %12 ==0)
				return quantity/12;
		}
		for(int i = 0 ; i < FLUIDS.length; i++){
			if(FLUIDS[i].equals(string1)){
				for(int k = i; k < FLUIDS.length; k++){
					if(FLUIDS[k].equals(string2)){
						for(int j = i; j < k; j++)
							conversion *= FLUID_RATIOS[j];
						return quantity * conversion;
					}                   
				}
				for(int k = i; k >=0 ; k--){
					if(FLUIDS[k].equals(string2)){
						for(int j = k; i < j; j--)
							conversion *= FLUID_RATIOS[j-1];
						if((quantity * conversion) % 1 == 0)
							return quantity * conversion;
					}
				}
			}
		}
		for(int i = 0 ; i < SOLIDS.length; i++){
			if(SOLIDS[i].equals(string1)){
				for(int k = i; k < SOLIDS.length; k++){
					if(SOLIDS[k].equals(string2)){
						for(int j = i; j < k; j++)
							conversion *= SOLIDS_RATIOS[j];
									return quantity * conversion;
					}                   
				}
				for(int k = i; k >= 0; k--){
					if(SOLIDS[k].equals(string2)){
						for(int j = k; i < j; j--)
							conversion *= SOLIDS_RATIOS[j-1];
									if((quantity * conversion) % 1 == 0)
										return quantity * conversion;
					}
				}
			}
		}
		return -1;
	}

	//boolean is smaller or equal
	public boolean isSmallerOrEqual(String string1, String string2){
		string1 = toStandardNotation(string1);
		string2 = toStandardNotation(string2);
		for(int i = 0 ; i < SOLIDS.length; i++){
			if(SOLIDS[i].equals(string1)){
				for(int k = i; k < SOLIDS.length; k++){
					if(SOLIDS[k].equals(string2)){
						return true;
					}
				}
			}
		}
		for(int i = 0 ; i < FLUIDS.length; i++){
			if(FLUIDS[i].equals(string1)){
				for(int k = i; k < FLUIDS.length; k++){
					if(FLUIDS[k].equals(string2)){
						return true;
					}
				}
			}
		}

		return false;

	}

	//two part division  





	private String toStandardNotation(String badassery){
		if(badassery.equals("ounce") ||badassery.equals("oz") ||badassery.equals("oz.") ||badassery.equals("ozs") ||badassery.equals("ozs."))
			return "ounces";
		if(badassery.equals("doz") ||badassery.equals("doz.") )
			return "dozen";
		//TODO more alternative cases
		return badassery;
	}
}
